import numpy as np

# 设定四个目标点 (x, y, z)
points = np.array([
    [0.0, 0.0, 1.5],
    [0.029485516995041063, 0.012213301032928397, 1.5],
    [0.04513447539488601, 0.045134475394886006, 1.5],
    [0.0366399030987852, 0.0884565509851232, 1.5],
    [7.816894462642679e-18, 0.1276595744680851, 1.5],
    [-0.06106650516464197, 0.1474275849752053, 1.5],
    [-0.13540342618465803, 0.13540342618465803, 1.5],
    [-0.20639861896528744, 0.0854931072304988, 1.5],
    [-0.2553191489361702, 3.1267577850570716e-17, 1.5],
    [-0.2653696529553696, -0.10991970929635553, 1.5],
    [-0.22567237697443007, -0.22567237697443002, 1.5],
    [-0.13434631136221253, -0.3243406869454516, 1.5],
    [-7.035205016378411e-17, -0.3829787234042553, 1.5],
    [0.15877291342806926, -0.3833117209355338, 1.5],
    [0.315941327764202, -0.31594132776420214, 1.5],
    [0.44228275492561586, -0.18319951549392624, 1.5],
    [0.5106382978723404, -1.2507031140228286e-16, 1.5],
    [0.501253788915698, 0.20762611755978283, 1.5],
    [0.4062102785539742, 0.40621027855397396, 1.5],
    [0.23205271962563992, 0.56022482290578, 1.5],
    [1.9542236156606698e-16, 0.6382978723404255, 1.5],
    [-0.2564793216914964, 0.6191958568958623, 1.5],
    [-0.4964792293437455, 0.4964792293437467, 1.5],
    [-0.6781668908859442, 0.2809059237573536, 1.5],
    [-0.7659574468085106, 2.8140820065513646e-16, 1.5],
    [-0.7371379248760266, -0.30533252582320997, 1.5],
    [-0.5867481801335179, -0.5867481801335185, 1.5],
    [-0.32975912788906736, -0.7961089588661084, 1.5],
    [-3.830278286694913e-16, -0.8936170212765957, 1.5],
    [0.3541857299549235, -0.8550799928561909, 1.5],
    [0.6770171309232892, -0.6770171309232911, 1.5],
    [0.9140510268462727, -0.3786123320207811, 1.5],
    [1.0212765957446808, -5.002812456091315e-16, 1.5],
    [0.9730220608363551, 0.403038934086637, 1.5],
    [0.7672860817130618, 0.7672860817130625, 1.5],
    [0.42746553615249483, 1.0319930948264369, 1.5],
    [6.331684514740571e-16, 1.1489361702127658, 1.5],
    [-0.4518921382183505, 1.0909641288165195, 1.5],
    [-0.8575550325028328, 0.8575550325028354, 1.5],
    [-1.149935162806601, 0.4763187402842086, 1.5],
    [-1.276595744680851, 7.816894462642679e-16, 1.5],
    [-1.2089061967966845, -0.5007453423500619, 1.5],
    [-0.9478239832926059, -0.9478239832926063, 1.5],
    [-0.5251719444159224, -1.267877230786765, 1.5],
    [-3.4403027704141577e-15, -1.404255319148936, 1.5],
    [0.5495985464817775, -1.326848264776848, 1.5],
    [1.0380929340823766, -1.03809293408238, 1.5],
    [1.3858192987669304, -0.5740251485476339, 1.5],
    [1.5, -1.102182119232618e-15, 1.5],
    [1.3563337817718901, 0.5618118475147035, 1.5],
    [1.0155256963849353, 1.0155256963849355, 1.5],
    [0.537385245448851, 1.2973627477818064, 1.5],
    [-1.3453552997247525e-15, 1.372340425531915, 1.5],
    [-0.5129586433829922, 1.238391713791725, 1.5],
    [-0.9252567455951618, 0.9252567455951649, 1.5],
    [-1.179420679801643, 0.48853204131713535, 1.5],
    [-1.2446808510638299, 1.0670060941507258e-15, 1.5],
    [-1.1204496458115616, -0.4641054392512766, 1.5],
    [-0.8349877948053913, -0.8349877948053913, 1.5],
    [-0.4396788371854237, -1.061478611821478, 1.5],
    [-3.0101957826583018e-15, -1.1170212765957448, 1.5],
    [0.41525223511956505, -1.0025075778313965, 1.5],
    [0.7447188440156179, -0.7447188440156206, 1.5],
    [0.9435365438413144, -0.39082563305370843, 1.5],
    [0.9893617021276596, -9.692949133676923e-16, 1.5],
    [0.8845655098512328, 0.36639903098784987, 1.5],
    [0.6544498932258472, 0.6544498932258471, 1.5],
    [0.34197242892199636, 0.8255944758611494, 1.5],
    [-6.337018284055854e-16, 0.8617021276595745, 1.5],
    [-0.3175458268561379, 0.766623441871068, 1.5],
    [-0.5641809424360741, 0.5641809424360763, 1.5],
    [-0.7076524078809847, 0.2931192247902839, 1.5],
    [-0.7340425531914894, 8.090485768835174e-16, 1.5],
    [-0.6486813738909032, -0.26869262272442546, 1.5],
    [-0.47391199164630327, -0.47391199164630304, 1.5],
    [-0.24426602065856887, -0.589710339900821, 1.5],
    [-1.7826272768047178e-15, -0.6063829787234043, 1.5],
    [0.21983941859271078, -0.5307393059107395, 1.5],
    [0.38364304085653034, -0.38364304085653195, 1.5],
    [0.4717682719206572, -0.19541281652685433, 1.5],
    [0.47872340425531923, -5.862670846982011e-16, 1.5],
    [0.41279723793057543, 0.17098621446099652, 1.5],
    [0.2933740900667582, 0.2933740900667601, 1.5],
    [0.14655961239514015, 0.35382620394049313, 1.5],
    [-1.7218897989098386e-16, 0.35106382978723416, 1.5],
    [-0.12213301032928377, 0.2948551699504109, 1.5],
    [-0.20310513927698667, 0.20310513927698762, 1.5],
    [-0.2358841359603283, 0.09770640826342807, 1.5],
    [-0.2234042553191491, 1.0946417905863239e-15, 1.5],
    [-0.176913101970247, -0.07327980619756934, 1.5],
    [-0.11283618848721522, -0.1128361884872151, 1.5],
    [-0.04885320413171387, -0.11794206798016435, 1.5],
    [-3.0491814814656827e-16, -0.09574468085106402, 1.5],
    [0.024426602065857023, -0.05897103399008226, 1.5],
    [0.022567237697443183, -0.022567237697443128, 1.5],
    [0.0, 0.0, 1.5]
])


# 插值参数
points_per_second = 100
speed = 0.5  # 每秒移动0.2米

# 计算每两个点之间的距离
distances = np.linalg.norm(points[1:] - points[:-1], axis=1)

# 计算每两个点之间所需的时间
total_time = distances / speed

# 初始化时间序列
t_values = []
interpolated_points = []

# 开始插值
current_time = 0.0
for i in range(len(points) - 1):
    start = points[i]
    end = points[i + 1]
    delta_t = 1.0 / points_per_second  # 每0.01秒插值一个点
    num_interpolated_points = int(total_time[i] * points_per_second)
    
    for j in range(num_interpolated_points):
        t = current_time + j * delta_t
        interp_point = start + (end - start) * (j / num_interpolated_points)
        t_values.append(t)
        interpolated_points.append(interp_point)
    
    current_time += total_time[i]

# 默认的四元数表示（假设不进行旋转）
q_w, q_x, q_y, q_z = 1.0, 0.0, 0.0, 0.0

# 输出文件
output_file = "/home/uav/FYP_WS/src/my_offboard_node/traj/p2p.txt"

with open(output_file, "w") as file:
    for i in range(len(t_values)):
        t = t_values[i]
        x, y, z = interpolated_points[i]
        file.write(f"{t:.6f} {x:.6f} {y:.6f} {z:.6f} {q_w:.6f} {q_x:.6f} {q_y:.6f} {q_z:.6f}")
        file.write(" 0.0" * 16 + "\n")

print(f"插值文件已生成: {output_file},total_time: {current_time}")

